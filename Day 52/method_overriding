Problem - Write a program in java for method overriding,first create a class and then create another class
          which inherits from parent class.In parent class create method which is overridding in child class.
          
Code:

import java.util.*;
class Sports{

    String getName(){
        return "Generic Sports";
    }
  
    void getNumberOfTeamMembers(){
        System.out.println( "Each team has n players in " + getName() );
    }
}

class Soccer extends Sports{
    @Override
    String getName(){
        return "Soccer Class";
    }

    // Write your overridden getNumberOfTeamMembers method here
    @Override
    void getNumberOfTeamMembers(){
        System.out.println( "Each team has 11 players in " + getName() );
    }


}

public class Solution{
	
    public static void main(String []args){
        Sports c1 = new Sports();
        Soccer c2 = new Soccer();
        System.out.println(c1.getName());
        c1.getNumberOfTeamMembers();
        System.out.println(c2.getName());
        c2.getNumberOfTeamMembers();
	}
}


Output:

Generic Sports
Each team has n players in Generic Sports
Soccer Class
Each team has 11 players in Soccer Class


Explanation - In this challenge we are using the concept of method overriding i.e when a subclass inherits from
              a superclass, it also inherits its methods.However, it can also override the superclass methods.
              
              We create a Soccer class that inherits from the Sports class. And can override the getName method and
              return a different, subclass-specific string.
              
       Note:  The parameter(s) and return type of an overridden method must be exactly the same as those of the method 
              inherited from the supertype.
