Problem - Write code in java to implement simple addition which contains the sum of the integers passed as the parameters.


Code:

import java.io.*;
import java.lang.reflect.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

class Add{
    public void add(int ...arr){
        
        int sum=0;
        
        for(int i=0;i<arr.length-1;i++){
            System.out.print(arr[i]);
            System.out.print("+");
            sum +=arr[i];
        }
        System.out.print(arr[arr.length-1]);
        sum +=arr[arr.length-1];
        
        System.out.println("="+sum);
        
    }
}

public class Solution {

    public static void main(String[] args) {
       try{
			BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
			int n1=Integer.parseInt(br.readLine());
			int n2=Integer.parseInt(br.readLine());
			int n3=Integer.parseInt(br.readLine());
			int n4=Integer.parseInt(br.readLine());
			int n5=Integer.parseInt(br.readLine());
			int n6=Integer.parseInt(br.readLine());
			Add ob=new Add();
			ob.add(n1,n2);
			ob.add(n1,n2,n3);
			ob.add(n1,n2,n3,n4,n5);	
			ob.add(n1,n2,n3,n4,n5,n6);
			Method[] methods=Add.class.getDeclaredMethods();
			Set<String> set=new HashSet<>();
			boolean overload=false;
			for(int i=0;i<methods.length;i++)
			{
				if(set.contains(methods[i].getName()))
				{
					overload=true;
					break;
				}
				set.add(methods[i].getName());
				
			}
			if(overload)
			{
				throw new Exception("Overloading not allowed");
			}
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}	
}

Input:

1
2
3
4
5
6

Output:

1+2=3
1+2+3=6
1+2+3+4+5=15
1+2+3+4+5+6=21


Explanation - In this challenge we implementing simple addition using variable arguments which prints 
              four lines of output. There are six lines of input, each containing an integer. Each line
              contains the sum of the integers passed as the parameters to add in the main method.
              
              In JDK 4/5 we cant declare a method with variable no. of arguments and variable-length arguments
              could be handled in two ways.To overcome these problems, Variable Arguments (Varargs) were introduced
              in JDK 5.In it we can declare a method with a variable number of arguments. Such types of methods are
              called Varargs methods.
