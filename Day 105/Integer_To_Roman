Problem --Write a program in java which takes integer as input and print roman number.


Code:
import java.util.*;

public class IntegerToRoman   
{  
public static void intToRoman(int num)   
{  
System.out.println("Integer: " + num);  
int[] values = {1000,900,500,400,100,90,50,40,10,9,5,4,1};  
String[] romanLetters = {"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};  
StringBuilder roman = new StringBuilder();  
for(int i=0;i<values.length;i++)   
{  
while(num >= values[i])   
{  
num = num - values[i];  
roman.append(romanLetters[i]);  
}  
}  
System.out.println("Corresponding Roman Numerals is: " + roman.toString());  
}  
public static void main(String args[])   
{  
intToRoman(125);  
intToRoman(252);  
intToRoman(1000);  
intToRoman(1010);  
}  
}


Input:
125
252
1000
1010


Output:
Integer:125
Corresponding Roman Numerals is:CXXV
Integer:252
Corresponding Roman Numerals is:CCLII
Integer:1000
Corresponding Roman Numerals is:M
Integer:1010
Corresponding Roman Numerals is:MX


Explanation - In this challenges we are taking ingteger as input and printing the roman of the given integer.

              If input number is >= highest roman numeral, add it to the string builder and reduce its
              corresponding value from the input number.
              
              If input number is < highest roman numeral, then check with next highest roman numerals.
              Repeat the process above till the input number becomes 0.
              
             Roman are usually written in highest to lowest from left to right, except some special cases
             (where the left character is less than the right character). For example, in roman numerals
             IV is equivalent to 4. It cannot be written as IIII.
             
