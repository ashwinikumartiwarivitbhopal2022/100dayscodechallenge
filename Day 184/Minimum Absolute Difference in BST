Problem - Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values 
          of any two different nodes in the tree.
          
          
          
Code:
class Solution {
    private int minDiff;
    private TreeNode prev;

    public int getMinimumDifference(TreeNode root) {
        minDiff = Integer.MAX_VALUE;
        prev = null;
        inOrderTraversal(root);
        return minDiff;
    }

    private void inOrderTraversal(TreeNode node) {
        if (node == null) {
            return;
        }

        inOrderTraversal(node.left);

        if (prev != null) {
            minDiff = Math.min(minDiff, node.val - prev.val);
        }

        prev = node;

        inOrderTraversal(node.right);
    }
}

Input: root = [1,0,48,null,null,12,49]
Output: 1

Input: root = [4,2,6,1,3]
Output: 1
