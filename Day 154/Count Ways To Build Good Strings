Problem - Given the integers zero, one, low, and high, we can construct a string by starting with an empty string,
          and then at each step perform either of the following:
          Append the character '0' zero times.
          Append the character '1' one times.
          
          
Code:
class Solution {
    public int countGoodStrings(int low, int high, int zero, int one) {
        int dp[]=new int[high+1];
        Arrays.fill(dp,-1);
        int ans=0;
        for(int i=low;i<=high;i++){
            ans=((ans%1000000007)+(f(i,dp,zero,one)%1000000007))%1000000007;
        }
        return ans;
    }
    public int f(int ind,int[] dp,int zero,int one){
        if(ind==0)
            return 1;
        if(ind<0)
            return 0;
        if(dp[ind]!=-1)
            return dp[ind];
        int forzero=f(ind-zero,dp,zero,one);
        int forone=f(ind-one,dp,zero,one);
        return dp[ind]=(forzero+forone)%1000000007;
    }
}


Input: low = 3, high = 3, zero = 1, one = 1
Output: 8
Explanation: 
One possible valid good string is "011". 
It can be constructed as follows: "" -> "0" -> "01" -> "011". 
All binary strings from "000" to "111" are good strings in this example.


Input: low = 2, high = 3, zero = 1, one = 2
Output: 5
Explanation: The good strings are "00", "11", "000", "110", and "011".

