Problem - Write a program in java to create another class that extends the abstract class.
          Then you create an instance of the new class.
          
Code:

import java.util.*;
abstract class Book{
	String title;
	abstract void setTitle(String s);
	String getTitle(){
		return title;
	}
}
class MyBook extends Book {
    @Override
    void setTitle(String s) {
        title = s;      
    }
}

public class Main{
	
	public static void main(String []args){
		//Book new_novel=new Book(); This line prHMain.java:25: error: Book is abstract; cannot be instantiated
		Scanner sc=new Scanner(System.in);
		String title=sc.nextLine();
		MyBook new_novel=new MyBook();
		new_novel.setTitle(title);
		System.out.println("The title is: "+new_novel.getTitle());
      	sc.close();
		
	}
}

Input:
A tale of two cities

Output:
The title is: A tale of two cities


Explanation:

 In this challenge we are creating another sub class that extends the abstract class.A Java abstract class
 is a class that can't be instantiated. That means you cannot create new instances of an abstract class. 
 It works as a base for subclasses.It can have abstract and non-abstract methods.Abstraction is a process
 of hiding the implementation details and showing only functionality to the user.


          
