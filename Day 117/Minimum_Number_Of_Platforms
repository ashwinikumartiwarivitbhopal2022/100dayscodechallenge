Problem - Write a program in java in which given the arrival and departure times of all trains that reach a railway station, the task
          is to find the minimum number of platforms required for the railway station so that no train waits.
          
          
Code:
import java.io.*;

class Main {
	public static int findPlatform(int arr[], int dep[],
								int n)
	{

		int plat_needed = 1, result = 1;

		for (int i = 0; i < n; i++) {
			plat_needed = 1;

			for (int j = 0; j < n; j++) {
				if (i != j)
					if (arr[i] >= arr[j]
						&& dep[j] >= arr[i])
						plat_needed++;
			}

			result = Math.max(result, plat_needed);
		}

		return result;
	}

	public static void main(String[] args)
	{
		int arr[] = { 100, 300, 500 };
		int dep[] = { 900, 400, 600 };
		int n = 3;
		System.out.println(findPlatform(arr, dep, n));
	}
}


Input: arr[] = {9:00, 9:40, 9:50, 11:00, 15:00, 18:00}, dep[] = {9:10, 12:00, 11:20, 11:30, 19:00, 20:00}

Output: 3

Explanation: There are at-most three trains at a time (time between 9:40 to 12:00)

Input: arr[] = {9:00, 9:40}, dep[] = {9:10, 12:00} 

Output: 1 

Explanation: Only one platform is needed. 
