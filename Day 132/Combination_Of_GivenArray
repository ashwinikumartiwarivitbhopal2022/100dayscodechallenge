Problem - Write a program in java in which take an array and make the combination with the desired size.


Code:
package myproject;

	import java.io.*;

	class CombinationOfGivenArray {

		static void combinationUtil(int arr[], int data[], int start,
									int end, int index, int r)
		{
			if (index == r)
			{
				for (int j=0; j<r; j++)
					System.out.print(data[j]+" ");
				System.out.println("");
				return;
			}

			for (int i=start; i<=end && end-i+1 >= r-index; i++)
			{
				data[index] = arr[i];
				combinationUtil(arr, data, i+1, end, index+1, r);
			}
		}

		static void printCombination(int arr[], int n, int r)
		{
			int data[]=new int[r];

			combinationUtil(arr, data, 0, n-1, 0, r);
		}
		public static void main (String[] args) {
			int arr[] = {1, 2, 3, 4, 5,6};
			int r = 3;
			int n = arr.length;
			printCombination(arr, n, r);
		}
	}

Input:
{1, 2, 3, 4, 5 }

Output:
1 2 3 
1 2 4 
1 2 5 
1 3 4 
1 3 5 
1 4 5 
2 3 4 
2 3 5 
2 4 5 
3 4 5


Explnation - In this challenge we create a temporary array ‘data[]’ which stores all outputs one by one. The idea is to start
             from first index (index = 0) in data[], one by one fix elements at this index and recur for remaining indexes. 
             Let the input array be {1, 2, 3, 4, 5} and r be 3. We first fix 1 at index 0 in data[], then recur for remaining 
             indexes, then we fix 2 at index 0 and recur. Finally, we fix 3 and recur for remaining indexes. When number of 
             elements in data[] becomes equal to r (size of a combination), we print data[].


